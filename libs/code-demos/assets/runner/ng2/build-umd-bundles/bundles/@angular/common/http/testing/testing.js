!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common/http"),require("@angular/core"),require("rxjs")):"function"==typeof define&&define.amd?define(["exports","@angular/common/http","@angular/core","rxjs"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).ngCommonHttpTesting={},e.ngCommonHttp,e.ngCore,e.rxjs)}(this,(function(e,t,r,n){"use strict";function o(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,Object.freeze(t)}var s=o(r);class i{}class a{constructor(e,t){this.request=e,this.observer=t,this._cancelled=!1}get cancelled(){return this._cancelled}flush(e,r={}){if(this.cancelled)throw new Error("Cannot flush a cancelled request.");const n=this.request.urlWithParams,o=r.headers instanceof t.HttpHeaders?r.headers:new t.HttpHeaders(r.headers);e=function(e,t){if(null===t)return null;switch(e){case"arraybuffer":return function(e){if("undefined"==typeof ArrayBuffer)throw new Error("ArrayBuffer responses are not supported on this platform.");if(e instanceof ArrayBuffer)return e;throw new Error("Automatic conversion to ArrayBuffer is not supported for response type.")}(t);case"blob":return function(e){if("undefined"==typeof Blob)throw new Error("Blob responses are not supported on this platform.");if(e instanceof Blob)return e;if(ArrayBuffer&&e instanceof ArrayBuffer)return new Blob([e]);throw new Error("Automatic conversion to Blob is not supported for response type.")}(t);case"json":return u(t);case"text":return function(e){if("string"==typeof e)return e;if("undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer)throw new Error("Automatic conversion to text is not supported for ArrayBuffers.");if("undefined"!=typeof Blob&&e instanceof Blob)throw new Error("Automatic conversion to text is not supported for Blobs.");return JSON.stringify(u(e,"text"))}(t);default:throw new Error(`Unsupported responseType: ${e}`)}}(this.request.responseType,e);let s=r.statusText,i=void 0!==r.status?r.status:200;if(void 0===r.status&&(null===e?(i=204,s=s||"No Content"):s=s||"OK"),void 0===s)throw new Error("statusText is required when setting a custom status.");i>=200&&i<300?(this.observer.next(new t.HttpResponse({body:e,headers:o,status:i,statusText:s,url:n})),this.observer.complete()):this.observer.error(new t.HttpErrorResponse({error:e,headers:o,status:i,statusText:s,url:n}))}error(e,r={}){if(this.cancelled)throw new Error("Cannot return an error for a cancelled request.");if(r.status&&r.status>=200&&r.status<300)throw new Error("error() called with a successful status.");const n=r.headers instanceof t.HttpHeaders?r.headers:new t.HttpHeaders(r.headers);this.observer.error(new t.HttpErrorResponse({error:e,headers:n,status:r.status||0,statusText:r.statusText||"",url:this.request.urlWithParams}))}event(e){if(this.cancelled)throw new Error("Cannot send events to a cancelled request.");this.observer.next(e)}}function u(e,t="JSON"){if("undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer)throw new Error(`Automatic conversion to ${t} is not supported for ArrayBuffers.`);if("undefined"!=typeof Blob&&e instanceof Blob)throw new Error(`Automatic conversion to ${t} is not supported for Blobs.`);if("string"==typeof e||"number"==typeof e||"object"==typeof e||"boolean"==typeof e||Array.isArray(e))return e;throw new Error(`Automatic conversion to ${t} is not supported for response type.`)}class c{constructor(){this.open=[]}handle(e){return new n.Observable((r=>{const n=new a(e,r);return this.open.push(n),r.next({type:t.HttpEventType.Sent}),()=>{n._cancelled=!0}}))}_match(e){return"string"==typeof e?this.open.filter((t=>t.request.urlWithParams===e)):"function"==typeof e?this.open.filter((t=>e(t.request))):this.open.filter((t=>!(e.method&&t.request.method!==e.method.toUpperCase()||e.url&&t.request.urlWithParams!==e.url)))}match(e){const t=this._match(e);return t.forEach((e=>{const t=this.open.indexOf(e);-1!==t&&this.open.splice(t,1)})),t}expectOne(e,t){t=t||this.descriptionFromMatcher(e);const r=this.match(e);if(r.length>1)throw new Error(`Expected one matching request for criteria "${t}", found ${r.length} requests.`);if(0===r.length){let e=`Expected one matching request for criteria "${t}", found none.`;if(this.open.length>0){e+=` Requests received are: ${this.open.map(f).join(", ")}.`}throw new Error(e)}return r[0]}expectNone(e,t){t=t||this.descriptionFromMatcher(e);const r=this.match(e);if(r.length>0)throw new Error(`Expected zero matching requests for criteria "${t}", found ${r.length}.`)}verify(e={}){let t=this.open;if(e.ignoreCancelled&&(t=t.filter((e=>!e.cancelled))),t.length>0){const e=t.map(f).join(", ");throw new Error(`Expected no open requests, found ${t.length}: ${e}`)}}descriptionFromMatcher(e){if("string"==typeof e)return`Match URL: ${e}`;if("object"==typeof e){return`Match method: ${e.method||"(any)"}, URL: ${e.url||"(any)"}`}return`Match by function: ${e.name}`}}function f(e){const t=e.request.urlWithParams;return`${e.request.method} ${t}`}function p(){return[c,{provide:t.HttpBackend,useExisting:c},{provide:i,useExisting:c}]}c.ɵfac=s.ɵɵngDeclareFactory({minVersion:"12.0.0",version:"15.0.4",ngImport:s,type:c,deps:[],target:s.ɵɵFactoryTarget.Injectable}),c.ɵprov=s.ɵɵngDeclareInjectable({minVersion:"12.0.0",version:"15.0.4",ngImport:s,type:c}),s.ɵɵngDeclareClassMetadata({minVersion:"12.0.0",version:"15.0.4",ngImport:s,type:c,decorators:[{type:r.Injectable}]});class l{}l.ɵfac=s.ɵɵngDeclareFactory({minVersion:"12.0.0",version:"15.0.4",ngImport:s,type:l,deps:[],target:s.ɵɵFactoryTarget.NgModule}),l.ɵmod=s.ɵɵngDeclareNgModule({minVersion:"14.0.0",version:"15.0.4",ngImport:s,type:l,imports:[t.HttpClientModule]}),l.ɵinj=s.ɵɵngDeclareInjector({minVersion:"12.0.0",version:"15.0.4",ngImport:s,type:l,providers:[p()],imports:[t.HttpClientModule]}),s.ɵɵngDeclareClassMetadata({minVersion:"12.0.0",version:"15.0.4",ngImport:s,type:l,decorators:[{type:r.NgModule,args:[{imports:[t.HttpClientModule],providers:[p()]}]}]}),e.HttpClientTestingModule=l,e.HttpTestingController=i,e.TestRequest=a,e.provideHttpClientTesting=p}));
