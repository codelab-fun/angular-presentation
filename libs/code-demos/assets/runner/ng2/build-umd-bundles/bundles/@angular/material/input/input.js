!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/cdk/coercion"),require("@angular/cdk/platform"),require("@angular/cdk/text-field"),require("@angular/core"),require("@angular/forms"),require("@angular/material/core"),require("@angular/material/form-field"),require("rxjs")):"function"==typeof define&&define.amd?define(["exports","@angular/cdk/coercion","@angular/cdk/platform","@angular/cdk/text-field","@angular/core","@angular/forms","@angular/material/core","@angular/material/form-field","rxjs"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).ngMaterialInput={},e.ngCdkCoercion,e.ngCdkPlatform,e.ngCdkTextField,e.ngCore,e.ngForms,e.ngMaterialCore,e.ngMaterialFormField,e.rxjs)}(this,(function(e,t,i,r,n,a,o,s,l){"use strict";function d(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(i){if("default"!==i){var r=Object.getOwnPropertyDescriptor(e,i);Object.defineProperty(t,i,r.get?r:{enumerable:!0,get:function(){return e[i]}})}})),t.default=e,Object.freeze(t)}var u=d(i),p=d(r),c=d(n),m=d(a),h=d(o),y=d(s);function _(e){return Error(`Input type "${e}" isn't supported by matInput.`)}const f=new n.InjectionToken("MAT_INPUT_VALUE_ACCESSOR"),g=["button","checkbox","file","hidden","image","radio","range","reset","submit"];let v=0;const I=o.mixinErrorState(class{constructor(e,t,i,r){this._defaultErrorStateMatcher=e,this._parentForm=t,this._parentFormGroup=i,this.ngControl=r,this.stateChanges=new l.Subject}});class M extends I{constructor(e,t,r,n,a,o,s,d,u,p){super(o,n,a,r),this._elementRef=e,this._platform=t,this._autofillMonitor=d,this._formField=p,this._uid="mat-input-"+v++,this.focused=!1,this.stateChanges=new l.Subject,this.controlType="mat-input",this.autofilled=!1,this._disabled=!1,this._type="text",this._readonly=!1,this._neverEmptyInputTypes=["date","datetime","datetime-local","month","time","week"].filter((e=>i.getSupportedInputTypes().has(e))),this._iOSKeyupListener=e=>{const t=e.target;t.value||0!==t.selectionStart||0!==t.selectionEnd||(t.setSelectionRange(1,1),t.setSelectionRange(0,0))};const c=this._elementRef.nativeElement,m=c.nodeName.toLowerCase();this._inputValueAccessor=s||c,this._previousNativeValue=this.value,this.id=this.id,t.IOS&&u.runOutsideAngular((()=>{e.nativeElement.addEventListener("keyup",this._iOSKeyupListener)})),this._isServer=!this._platform.isBrowser,this._isNativeSelect="select"===m,this._isTextarea="textarea"===m,this._isInFormField=!!p,this._isNativeSelect&&(this.controlType=c.multiple?"mat-native-select-multiple":"mat-native-select")}get disabled(){return this._disabled}set disabled(e){this._disabled=t.coerceBooleanProperty(e),this.focused&&(this.focused=!1,this.stateChanges.next())}get id(){return this._id}set id(e){this._id=e||this._uid}get required(){return this._required??this.ngControl?.control?.hasValidator(a.Validators.required)??!1}set required(e){this._required=t.coerceBooleanProperty(e)}get type(){return this._type}set type(e){this._type=e||"text",this._validateType(),!this._isTextarea&&i.getSupportedInputTypes().has(this._type)&&(this._elementRef.nativeElement.type=this._type)}get value(){return this._inputValueAccessor.value}set value(e){e!==this.value&&(this._inputValueAccessor.value=e,this.stateChanges.next())}get readonly(){return this._readonly}set readonly(e){this._readonly=t.coerceBooleanProperty(e)}ngAfterViewInit(){this._platform.isBrowser&&this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((e=>{this.autofilled=e.isAutofilled,this.stateChanges.next()}))}ngOnChanges(){this.stateChanges.next()}ngOnDestroy(){this.stateChanges.complete(),this._platform.isBrowser&&this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement),this._platform.IOS&&this._elementRef.nativeElement.removeEventListener("keyup",this._iOSKeyupListener)}ngDoCheck(){this.ngControl&&(this.updateErrorState(),null!==this.ngControl.disabled&&this.ngControl.disabled!==this.disabled&&(this.disabled=this.ngControl.disabled,this.stateChanges.next())),this._dirtyCheckNativeValue(),this._dirtyCheckPlaceholder()}focus(e){this._elementRef.nativeElement.focus(e)}_focusChanged(e){e!==this.focused&&(this.focused=e,this.stateChanges.next())}_onInput(){}_dirtyCheckNativeValue(){const e=this._elementRef.nativeElement.value;this._previousNativeValue!==e&&(this._previousNativeValue=e,this.stateChanges.next())}_dirtyCheckPlaceholder(){const e=this._getPlaceholder();if(e!==this._previousPlaceholder){const t=this._elementRef.nativeElement;this._previousPlaceholder=e,e?t.setAttribute("placeholder",e):t.removeAttribute("placeholder")}}_getPlaceholder(){return this.placeholder||null}_validateType(){if(g.indexOf(this._type)>-1&&("undefined"==typeof ngDevMode||ngDevMode))throw _(this._type)}_isNeverEmpty(){return this._neverEmptyInputTypes.indexOf(this._type)>-1}_isBadInput(){let e=this._elementRef.nativeElement.validity;return e&&e.badInput}get empty(){return!(this._isNeverEmpty()||this._elementRef.nativeElement.value||this._isBadInput()||this.autofilled)}get shouldLabelFloat(){if(this._isNativeSelect){const e=this._elementRef.nativeElement,t=e.options[0];return this.focused||e.multiple||!this.empty||!!(e.selectedIndex>-1&&t&&t.label)}return this.focused||!this.empty}setDescribedByIds(e){e.length?this._elementRef.nativeElement.setAttribute("aria-describedby",e.join(" ")):this._elementRef.nativeElement.removeAttribute("aria-describedby")}onContainerClick(){this.focused||this.focus()}_isInlineSelect(){const e=this._elementRef.nativeElement;return this._isNativeSelect&&(e.multiple||e.size>1)}}M.ɵfac=c.ɵɵngDeclareFactory({minVersion:"12.0.0",version:"15.0.0",ngImport:c,type:M,deps:[{token:c.ElementRef},{token:u.Platform},{token:m.NgControl,optional:!0,self:!0},{token:m.NgForm,optional:!0},{token:m.FormGroupDirective,optional:!0},{token:h.ErrorStateMatcher},{token:f,optional:!0,self:!0},{token:p.AutofillMonitor},{token:c.NgZone},{token:s.MAT_FORM_FIELD,optional:!0}],target:c.ɵɵFactoryTarget.Directive}),M.ɵdir=c.ɵɵngDeclareDirective({minVersion:"14.0.0",version:"15.0.0",type:M,selector:"input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]",inputs:{disabled:"disabled",id:"id",placeholder:"placeholder",name:"name",required:"required",type:"type",errorStateMatcher:"errorStateMatcher",userAriaDescribedBy:["aria-describedby","userAriaDescribedBy"],value:"value",readonly:"readonly"},host:{listeners:{focus:"_focusChanged(true)",blur:"_focusChanged(false)",input:"_onInput()"},properties:{"class.mat-input-server":"_isServer","class.mat-mdc-form-field-textarea-control":"_isInFormField && _isTextarea","class.mat-mdc-form-field-input-control":"_isInFormField","class.mdc-text-field__input":"_isInFormField","class.mat-mdc-native-select-inline":"_isInlineSelect()",id:"id",disabled:"disabled",required:"required","attr.name":"name || null","attr.readonly":"readonly && !_isNativeSelect || null","attr.aria-invalid":"(empty && required) ? null : errorState","attr.aria-required":"required","attr.id":"id"},classAttribute:"mat-mdc-input-element"},providers:[{provide:s.MatFormFieldControl,useExisting:M}],exportAs:["matInput"],usesInheritance:!0,usesOnChanges:!0,ngImport:c}),c.ɵɵngDeclareClassMetadata({minVersion:"12.0.0",version:"15.0.0",ngImport:c,type:M,decorators:[{type:n.Directive,args:[{selector:"input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]",exportAs:"matInput",host:{class:"mat-mdc-input-element","[class.mat-input-server]":"_isServer","[class.mat-mdc-form-field-textarea-control]":"_isInFormField && _isTextarea","[class.mat-mdc-form-field-input-control]":"_isInFormField","[class.mdc-text-field__input]":"_isInFormField","[class.mat-mdc-native-select-inline]":"_isInlineSelect()","[id]":"id","[disabled]":"disabled","[required]":"required","[attr.name]":"name || null","[attr.readonly]":"readonly && !_isNativeSelect || null","[attr.aria-invalid]":"(empty && required) ? null : errorState","[attr.aria-required]":"required","[attr.id]":"id","(focus)":"_focusChanged(true)","(blur)":"_focusChanged(false)","(input)":"_onInput()"},providers:[{provide:s.MatFormFieldControl,useExisting:M}]}]}],ctorParameters:function(){return[{type:c.ElementRef},{type:u.Platform},{type:m.NgControl,decorators:[{type:n.Optional},{type:n.Self}]},{type:m.NgForm,decorators:[{type:n.Optional}]},{type:m.FormGroupDirective,decorators:[{type:n.Optional}]},{type:h.ErrorStateMatcher},{type:void 0,decorators:[{type:n.Optional},{type:n.Self},{type:n.Inject,args:[f]}]},{type:p.AutofillMonitor},{type:c.NgZone},{type:y.MatFormField,decorators:[{type:n.Optional},{type:n.Inject,args:[s.MAT_FORM_FIELD]}]}]},propDecorators:{disabled:[{type:n.Input}],id:[{type:n.Input}],placeholder:[{type:n.Input}],name:[{type:n.Input}],required:[{type:n.Input}],type:[{type:n.Input}],errorStateMatcher:[{type:n.Input}],userAriaDescribedBy:[{type:n.Input,args:["aria-describedby"]}],value:[{type:n.Input}],readonly:[{type:n.Input}]}});class C{}C.ɵfac=c.ɵɵngDeclareFactory({minVersion:"12.0.0",version:"15.0.0",ngImport:c,type:C,deps:[],target:c.ɵɵFactoryTarget.NgModule}),C.ɵmod=c.ɵɵngDeclareNgModule({minVersion:"14.0.0",version:"15.0.0",ngImport:c,type:C,declarations:[M],imports:[o.MatCommonModule,s.MatFormFieldModule],exports:[M,s.MatFormFieldModule,r.TextFieldModule,o.MatCommonModule]}),C.ɵinj=c.ɵɵngDeclareInjector({minVersion:"12.0.0",version:"15.0.0",ngImport:c,type:C,imports:[o.MatCommonModule,s.MatFormFieldModule,s.MatFormFieldModule,r.TextFieldModule,o.MatCommonModule]}),c.ɵɵngDeclareClassMetadata({minVersion:"12.0.0",version:"15.0.0",ngImport:c,type:C,decorators:[{type:n.NgModule,args:[{imports:[o.MatCommonModule,s.MatFormFieldModule],exports:[M,s.MatFormFieldModule,r.TextFieldModule,o.MatCommonModule],declarations:[M]}]}]}),e.MAT_INPUT_VALUE_ACCESSOR=f,e.MatInput=M,e.MatInputModule=C,e.getMatInputUnsupportedTypeError=_}));
