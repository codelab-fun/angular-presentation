!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/cdk/overlay"),require("@angular/common"),require("@angular/core"),require("@angular/material/core"),require("@angular/material/form-field"),require("@angular/cdk/scrolling"),require("@angular/cdk/a11y"),require("@angular/cdk/bidi"),require("@angular/cdk/coercion"),require("@angular/cdk/collections"),require("@angular/cdk/keycodes"),require("@angular/forms"),require("rxjs"),require("rxjs/operators"),require("@angular/animations")):"function"==typeof define&&define.amd?define(["exports","@angular/cdk/overlay","@angular/common","@angular/core","@angular/material/core","@angular/material/form-field","@angular/cdk/scrolling","@angular/cdk/a11y","@angular/cdk/bidi","@angular/cdk/coercion","@angular/cdk/collections","@angular/cdk/keycodes","@angular/forms","rxjs","rxjs/operators","@angular/animations"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).ngMaterialSelect={},e.ngCdkOverlay,e.ngCommon,e.ngCore,e.ngMaterialCore,e.ngMaterialFormField,e.ngCdkScrolling,e.ngCdkA11y,e.ngCdkBidi,e.ngCdkCoercion,e.ngCdkCollections,e.ngCdkKeycodes,e.ngForms,e.rxjs,e.rxjsOperators,e.ngAnimations)}(this,(function(e,t,a,n,i,r,o,s,l,c,d,p,h,m,g,u){"use strict";function y(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(a){if("default"!==a){var n=Object.getOwnPropertyDescriptor(e,a);Object.defineProperty(t,a,n.get?n:{enumerable:!0,get:function(){return e[a]}})}})),t.default=e,Object.freeze(t)}var v=y(t),f=y(a),_=y(n),b=y(i),C=y(r),O=y(o),k=y(s),w=y(l),x=y(h);const M={transformPanelWrap:u.trigger("transformPanelWrap",[u.transition("* => void",u.query("@transformPanel",[u.animateChild()],{optional:!0}))]),transformPanel:u.trigger("transformPanel",[u.state("void",u.style({opacity:0,transform:"scale(1, 0.8)"})),u.transition("void => showing",u.animate("120ms cubic-bezier(0, 0, 0.2, 1)",u.style({opacity:1,transform:"scale(1, 1)"}))),u.transition("* => void",u.animate("100ms linear",u.style({opacity:0})))])};let S=0;const I=new n.InjectionToken("mat-select-scroll-strategy");function D(e){return()=>e.scrollStrategies.reposition()}const A=new n.InjectionToken("MAT_SELECT_CONFIG"),T={provide:I,deps:[t.Overlay],useFactory:D},E=new n.InjectionToken("MatSelectTrigger");class R{constructor(e,t){this.source=e,this.value=t}}const F=i.mixinDisableRipple(i.mixinTabIndex(i.mixinDisabled(i.mixinErrorState(class{constructor(e,t,a,n,i){this._elementRef=e,this._defaultErrorStateMatcher=t,this._parentForm=a,this._parentFormGroup=n,this.ngControl=i,this.stateChanges=new m.Subject}}))));class P extends F{constructor(e,t,a,i,r,o,s,l,c,d,p,h,u,y){super(r,i,s,l,d),this._viewportRuler=e,this._changeDetectorRef=t,this._ngZone=a,this._dir=o,this._parentFormField=c,this._liveAnnouncer=u,this._defaultOptions=y,this._panelOpen=!1,this._compareWith=(e,t)=>e===t,this._uid="mat-select-"+S++,this._triggerAriaLabelledBy=null,this._destroy=new m.Subject,this._onChange=()=>{},this._onTouched=()=>{},this._valueId="mat-select-value-"+S++,this._panelDoneAnimatingStream=new m.Subject,this._overlayPanelClass=this._defaultOptions?.overlayPanelClass||"",this._focused=!1,this.controlType="mat-select",this._multiple=!1,this._disableOptionCentering=this._defaultOptions?.disableOptionCentering??!1,this.ariaLabel="",this.optionSelectionChanges=m.defer((()=>{const e=this.options;return e?e.changes.pipe(g.startWith(e),g.switchMap((()=>m.merge(...e.map((e=>e.onSelectionChange)))))):this._ngZone.onStable.pipe(g.take(1),g.switchMap((()=>this.optionSelectionChanges)))})),this.openedChange=new n.EventEmitter,this._openedStream=this.openedChange.pipe(g.filter((e=>e)),g.map((()=>{}))),this._closedStream=this.openedChange.pipe(g.filter((e=>!e)),g.map((()=>{}))),this.selectionChange=new n.EventEmitter,this.valueChange=new n.EventEmitter,this.ngControl&&(this.ngControl.valueAccessor=this),null!=y?.typeaheadDebounceInterval&&(this._typeaheadDebounceInterval=y.typeaheadDebounceInterval),this._scrollStrategyFactory=h,this._scrollStrategy=this._scrollStrategyFactory(),this.tabIndex=parseInt(p)||0,this.id=this.id}get focused(){return this._focused||this._panelOpen}get placeholder(){return this._placeholder}set placeholder(e){this._placeholder=e,this.stateChanges.next()}get required(){return this._required??this.ngControl?.control?.hasValidator(h.Validators.required)??!1}set required(e){this._required=c.coerceBooleanProperty(e),this.stateChanges.next()}get multiple(){return this._multiple}set multiple(e){if(this._selectionModel&&("undefined"==typeof ngDevMode||ngDevMode))throw Error("Cannot change `multiple` mode of select after initialization.");this._multiple=c.coerceBooleanProperty(e)}get disableOptionCentering(){return this._disableOptionCentering}set disableOptionCentering(e){this._disableOptionCentering=c.coerceBooleanProperty(e)}get compareWith(){return this._compareWith}set compareWith(e){if("function"!=typeof e&&("undefined"==typeof ngDevMode||ngDevMode))throw Error("`compareWith` must be a function.");this._compareWith=e,this._selectionModel&&this._initializeSelection()}get value(){return this._value}set value(e){this._assignValue(e)&&this._onChange(e)}get typeaheadDebounceInterval(){return this._typeaheadDebounceInterval}set typeaheadDebounceInterval(e){this._typeaheadDebounceInterval=c.coerceNumberProperty(e)}get id(){return this._id}set id(e){this._id=e||this._uid,this.stateChanges.next()}ngOnInit(){this._selectionModel=new d.SelectionModel(this.multiple),this.stateChanges.next(),this._panelDoneAnimatingStream.pipe(g.distinctUntilChanged(),g.takeUntil(this._destroy)).subscribe((()=>this._panelDoneAnimating(this.panelOpen)))}ngAfterContentInit(){this._initKeyManager(),this._selectionModel.changed.pipe(g.takeUntil(this._destroy)).subscribe((e=>{e.added.forEach((e=>e.select())),e.removed.forEach((e=>e.deselect()))})),this.options.changes.pipe(g.startWith(null),g.takeUntil(this._destroy)).subscribe((()=>{this._resetOptions(),this._initializeSelection()}))}ngDoCheck(){const e=this._getTriggerAriaLabelledby(),t=this.ngControl;if(e!==this._triggerAriaLabelledBy){const t=this._elementRef.nativeElement;this._triggerAriaLabelledBy=e,e?t.setAttribute("aria-labelledby",e):t.removeAttribute("aria-labelledby")}t&&(this._previousControl!==t.control&&(void 0!==this._previousControl&&null!==t.disabled&&t.disabled!==this.disabled&&(this.disabled=t.disabled),this._previousControl=t.control),this.updateErrorState())}ngOnChanges(e){(e.disabled||e.userAriaDescribedBy)&&this.stateChanges.next(),e.typeaheadDebounceInterval&&this._keyManager&&this._keyManager.withTypeAhead(this._typeaheadDebounceInterval)}ngOnDestroy(){this._keyManager?.destroy(),this._destroy.next(),this._destroy.complete(),this.stateChanges.complete()}toggle(){this.panelOpen?this.close():this.open()}open(){this._canOpen()&&(this._panelOpen=!0,this._keyManager.withHorizontalOrientation(null),this._highlightCorrectOption(),this._changeDetectorRef.markForCheck())}close(){this._panelOpen&&(this._panelOpen=!1,this._keyManager.withHorizontalOrientation(this._isRtl()?"rtl":"ltr"),this._changeDetectorRef.markForCheck(),this._onTouched())}writeValue(e){this._assignValue(e)}registerOnChange(e){this._onChange=e}registerOnTouched(e){this._onTouched=e}setDisabledState(e){this.disabled=e,this._changeDetectorRef.markForCheck(),this.stateChanges.next()}get panelOpen(){return this._panelOpen}get selected(){return this.multiple?this._selectionModel?.selected||[]:this._selectionModel?.selected[0]}get triggerValue(){if(this.empty)return"";if(this._multiple){const e=this._selectionModel.selected.map((e=>e.viewValue));return this._isRtl()&&e.reverse(),e.join(", ")}return this._selectionModel.selected[0].viewValue}_isRtl(){return!!this._dir&&"rtl"===this._dir.value}_handleKeydown(e){this.disabled||(this.panelOpen?this._handleOpenKeydown(e):this._handleClosedKeydown(e))}_handleClosedKeydown(e){const t=e.keyCode,a=t===p.DOWN_ARROW||t===p.UP_ARROW||t===p.LEFT_ARROW||t===p.RIGHT_ARROW,n=t===p.ENTER||t===p.SPACE,i=this._keyManager;if(!i.isTyping()&&n&&!p.hasModifierKey(e)||(this.multiple||e.altKey)&&a)e.preventDefault(),this.open();else if(!this.multiple){const t=this.selected;i.onKeydown(e);const a=this.selected;a&&t!==a&&this._liveAnnouncer.announce(a.viewValue,1e4)}}_handleOpenKeydown(e){const t=this._keyManager,a=e.keyCode,n=a===p.DOWN_ARROW||a===p.UP_ARROW,i=t.isTyping();if(n&&e.altKey)e.preventDefault(),this.close();else if(i||a!==p.ENTER&&a!==p.SPACE||!t.activeItem||p.hasModifierKey(e))if(!i&&this._multiple&&a===p.A&&e.ctrlKey){e.preventDefault();const t=this.options.some((e=>!e.disabled&&!e.selected));this.options.forEach((e=>{e.disabled||(t?e.select():e.deselect())}))}else{const a=t.activeItemIndex;t.onKeydown(e),this._multiple&&n&&e.shiftKey&&t.activeItem&&t.activeItemIndex!==a&&t.activeItem._selectViaInteraction()}else e.preventDefault(),t.activeItem._selectViaInteraction()}_onFocus(){this.disabled||(this._focused=!0,this.stateChanges.next())}_onBlur(){this._focused=!1,this._keyManager?.cancelTypeahead(),this.disabled||this.panelOpen||(this._onTouched(),this._changeDetectorRef.markForCheck(),this.stateChanges.next())}_onAttached(){this._overlayDir.positionChange.pipe(g.take(1)).subscribe((()=>{this._changeDetectorRef.detectChanges(),this._positioningSettled()}))}_getPanelTheme(){return this._parentFormField?`mat-${this._parentFormField.color}`:""}get empty(){return!this._selectionModel||this._selectionModel.isEmpty()}_initializeSelection(){Promise.resolve().then((()=>{this.ngControl&&(this._value=this.ngControl.value),this._setSelectionByValue(this._value),this.stateChanges.next()}))}_setSelectionByValue(e){if(this._selectionModel.selected.forEach((e=>e.setInactiveStyles())),this._selectionModel.clear(),this.multiple&&e){if(!Array.isArray(e)&&("undefined"==typeof ngDevMode||ngDevMode))throw Error("Value must be an array in multiple-selection mode.");e.forEach((e=>this._selectOptionByValue(e))),this._sortValues()}else{const t=this._selectOptionByValue(e);t?this._keyManager.updateActiveItem(t):this.panelOpen||this._keyManager.updateActiveItem(-1)}this._changeDetectorRef.markForCheck()}_selectOptionByValue(e){const t=this.options.find((t=>{if(this._selectionModel.isSelected(t))return!1;try{return null!=t.value&&this._compareWith(t.value,e)}catch(e){return("undefined"==typeof ngDevMode||ngDevMode)&&console.warn(e),!1}}));return t&&this._selectionModel.select(t),t}_assignValue(e){return!!(e!==this._value||this._multiple&&Array.isArray(e))&&(this.options&&this._setSelectionByValue(e),this._value=e,!0)}_initKeyManager(){this._keyManager=new s.ActiveDescendantKeyManager(this.options).withTypeAhead(this._typeaheadDebounceInterval).withVerticalOrientation().withHorizontalOrientation(this._isRtl()?"rtl":"ltr").withHomeAndEnd().withPageUpDown().withAllowedModifierKeys(["shiftKey"]),this._keyManager.tabOut.subscribe((()=>{this.panelOpen&&(!this.multiple&&this._keyManager.activeItem&&this._keyManager.activeItem._selectViaInteraction(),this.focus(),this.close())})),this._keyManager.change.subscribe((()=>{this._panelOpen&&this.panel?this._scrollOptionIntoView(this._keyManager.activeItemIndex||0):this._panelOpen||this.multiple||!this._keyManager.activeItem||this._keyManager.activeItem._selectViaInteraction()}))}_resetOptions(){const e=m.merge(this.options.changes,this._destroy);this.optionSelectionChanges.pipe(g.takeUntil(e)).subscribe((e=>{this._onSelect(e.source,e.isUserInput),e.isUserInput&&!this.multiple&&this._panelOpen&&(this.close(),this.focus())})),m.merge(...this.options.map((e=>e._stateChanges))).pipe(g.takeUntil(e)).subscribe((()=>{this._changeDetectorRef.detectChanges(),this.stateChanges.next()}))}_onSelect(e,t){const a=this._selectionModel.isSelected(e);null!=e.value||this._multiple?(a!==e.selected&&(e.selected?this._selectionModel.select(e):this._selectionModel.deselect(e)),t&&this._keyManager.setActiveItem(e),this.multiple&&(this._sortValues(),t&&this.focus())):(e.deselect(),this._selectionModel.clear(),null!=this.value&&this._propagateChanges(e.value)),a!==this._selectionModel.isSelected(e)&&this._propagateChanges(),this.stateChanges.next()}_sortValues(){if(this.multiple){const e=this.options.toArray();this._selectionModel.sort(((t,a)=>this.sortComparator?this.sortComparator(t,a,e):e.indexOf(t)-e.indexOf(a))),this.stateChanges.next()}}_propagateChanges(e){let t=null;t=this.multiple?this.selected.map((e=>e.value)):this.selected?this.selected.value:e,this._value=t,this.valueChange.emit(t),this._onChange(t),this.selectionChange.emit(this._getChangeEvent(t)),this._changeDetectorRef.markForCheck()}_highlightCorrectOption(){this._keyManager&&(this.empty?this._keyManager.setFirstItemActive():this._keyManager.setActiveItem(this._selectionModel.selected[0]))}_canOpen(){return!this._panelOpen&&!this.disabled&&this.options?.length>0}focus(e){this._elementRef.nativeElement.focus(e)}_getPanelAriaLabelledby(){if(this.ariaLabel)return null;const e=this._parentFormField?.getLabelId(),t=e?e+" ":"";return this.ariaLabelledby?t+this.ariaLabelledby:e}_getAriaActiveDescendant(){return this.panelOpen&&this._keyManager&&this._keyManager.activeItem?this._keyManager.activeItem.id:null}_getTriggerAriaLabelledby(){if(this.ariaLabel)return null;const e=this._parentFormField?.getLabelId();let t=(e?e+" ":"")+this._valueId;return this.ariaLabelledby&&(t+=" "+this.ariaLabelledby),t}_panelDoneAnimating(e){this.openedChange.emit(e)}setDescribedByIds(e){e.length?this._elementRef.nativeElement.setAttribute("aria-describedby",e.join(" ")):this._elementRef.nativeElement.removeAttribute("aria-describedby")}onContainerClick(){this.focus(),this.open()}get shouldLabelFloat(){return this._panelOpen||!this.empty||this._focused&&!!this._placeholder}}P.ɵfac=_.ɵɵngDeclareFactory({minVersion:"12.0.0",version:"15.0.0",ngImport:_,type:P,deps:[{token:O.ViewportRuler},{token:_.ChangeDetectorRef},{token:_.NgZone},{token:b.ErrorStateMatcher},{token:_.ElementRef},{token:w.Directionality,optional:!0},{token:x.NgForm,optional:!0},{token:x.FormGroupDirective,optional:!0},{token:r.MAT_FORM_FIELD,optional:!0},{token:x.NgControl,optional:!0,self:!0},{token:"tabindex",attribute:!0},{token:I},{token:k.LiveAnnouncer},{token:A,optional:!0}],target:_.ɵɵFactoryTarget.Directive}),P.ɵdir=_.ɵɵngDeclareDirective({minVersion:"14.0.0",version:"15.0.0",type:P,inputs:{userAriaDescribedBy:["aria-describedby","userAriaDescribedBy"],panelClass:"panelClass",placeholder:"placeholder",required:"required",multiple:"multiple",disableOptionCentering:"disableOptionCentering",compareWith:"compareWith",value:"value",ariaLabel:["aria-label","ariaLabel"],ariaLabelledby:["aria-labelledby","ariaLabelledby"],errorStateMatcher:"errorStateMatcher",typeaheadDebounceInterval:"typeaheadDebounceInterval",sortComparator:"sortComparator",id:"id"},outputs:{openedChange:"openedChange",_openedStream:"opened",_closedStream:"closed",selectionChange:"selectionChange",valueChange:"valueChange"},viewQueries:[{propertyName:"trigger",first:!0,predicate:["trigger"],descendants:!0},{propertyName:"panel",first:!0,predicate:["panel"],descendants:!0},{propertyName:"_overlayDir",first:!0,predicate:t.CdkConnectedOverlay,descendants:!0}],usesInheritance:!0,usesOnChanges:!0,ngImport:_}),_.ɵɵngDeclareClassMetadata({minVersion:"12.0.0",version:"15.0.0",ngImport:_,type:P,decorators:[{type:n.Directive}],ctorParameters:function(){return[{type:O.ViewportRuler},{type:_.ChangeDetectorRef},{type:_.NgZone},{type:b.ErrorStateMatcher},{type:_.ElementRef},{type:w.Directionality,decorators:[{type:n.Optional}]},{type:x.NgForm,decorators:[{type:n.Optional}]},{type:x.FormGroupDirective,decorators:[{type:n.Optional}]},{type:C.MatFormField,decorators:[{type:n.Optional},{type:n.Inject,args:[r.MAT_FORM_FIELD]}]},{type:x.NgControl,decorators:[{type:n.Self},{type:n.Optional}]},{type:void 0,decorators:[{type:n.Attribute,args:["tabindex"]}]},{type:void 0,decorators:[{type:n.Inject,args:[I]}]},{type:k.LiveAnnouncer},{type:void 0,decorators:[{type:n.Optional},{type:n.Inject,args:[A]}]}]},propDecorators:{userAriaDescribedBy:[{type:n.Input,args:["aria-describedby"]}],trigger:[{type:n.ViewChild,args:["trigger"]}],panel:[{type:n.ViewChild,args:["panel"]}],_overlayDir:[{type:n.ViewChild,args:[t.CdkConnectedOverlay]}],panelClass:[{type:n.Input}],placeholder:[{type:n.Input}],required:[{type:n.Input}],multiple:[{type:n.Input}],disableOptionCentering:[{type:n.Input}],compareWith:[{type:n.Input}],value:[{type:n.Input}],ariaLabel:[{type:n.Input,args:["aria-label"]}],ariaLabelledby:[{type:n.Input,args:["aria-labelledby"]}],errorStateMatcher:[{type:n.Input}],typeaheadDebounceInterval:[{type:n.Input}],sortComparator:[{type:n.Input}],id:[{type:n.Input}],openedChange:[{type:n.Output}],_openedStream:[{type:n.Output,args:["opened"]}],_closedStream:[{type:n.Output,args:["closed"]}],selectionChange:[{type:n.Output}],valueChange:[{type:n.Output}]}});class V{}V.ɵfac=_.ɵɵngDeclareFactory({minVersion:"12.0.0",version:"15.0.0",ngImport:_,type:V,deps:[],target:_.ɵɵFactoryTarget.Directive}),V.ɵdir=_.ɵɵngDeclareDirective({minVersion:"14.0.0",version:"15.0.0",type:V,selector:"mat-select-trigger",providers:[{provide:E,useExisting:V}],ngImport:_}),_.ɵɵngDeclareClassMetadata({minVersion:"12.0.0",version:"15.0.0",ngImport:_,type:V,decorators:[{type:n.Directive,args:[{selector:"mat-select-trigger",providers:[{provide:E,useExisting:V}]}]}]});class L extends P{constructor(){super(...arguments),this._positions=[{originX:"start",originY:"bottom",overlayX:"start",overlayY:"top"},{originX:"start",originY:"top",overlayX:"start",overlayY:"bottom",panelClass:"mat-mdc-select-panel-above"}]}get shouldLabelFloat(){return this.panelOpen||!this.empty||this.focused&&!!this.placeholder}ngOnInit(){super.ngOnInit(),this._viewportRuler.change().pipe(g.takeUntil(this._destroy)).subscribe((()=>{this.panelOpen&&(this._overlayWidth=this._getOverlayWidth(),this._changeDetectorRef.detectChanges())}))}ngAfterViewInit(){this._parentFormField&&(this._preferredOverlayOrigin=this._parentFormField.getConnectedOverlayOrigin())}open(){this._overlayWidth=this._getOverlayWidth(),super.open(),this.stateChanges.next()}close(){super.close(),this.stateChanges.next()}_scrollOptionIntoView(e){const t=this.options.toArray()[e];if(t){const a=this.panel.nativeElement,n=i._countGroupLabelsBeforeOption(e,this.options,this.optionGroups),r=t._getHostElement();a.scrollTop=0===e&&1===n?0:i._getOptionScrollPosition(r.offsetTop,r.offsetHeight,a.scrollTop,a.offsetHeight)}}_positioningSettled(){this._scrollOptionIntoView(this._keyManager.activeItemIndex||0)}_getChangeEvent(e){return new R(this,e)}_getOverlayWidth(){return(this._preferredOverlayOrigin instanceof t.CdkOverlayOrigin?this._preferredOverlayOrigin.elementRef:this._preferredOverlayOrigin||this._elementRef).nativeElement.getBoundingClientRect().width}}L.ɵfac=_.ɵɵngDeclareFactory({minVersion:"12.0.0",version:"15.0.0",ngImport:_,type:L,deps:null,target:_.ɵɵFactoryTarget.Component}),L.ɵcmp=_.ɵɵngDeclareComponent({minVersion:"14.0.0",version:"15.0.0",type:L,selector:"mat-select",inputs:{disabled:"disabled",disableRipple:"disableRipple",tabIndex:"tabIndex"},host:{attributes:{role:"combobox","aria-autocomplete":"none","aria-haspopup":"listbox"},listeners:{keydown:"_handleKeydown($event)",focus:"_onFocus()",blur:"_onBlur()"},properties:{"attr.id":"id","attr.tabindex":"tabIndex","attr.aria-controls":'panelOpen ? id + "-panel" : null',"attr.aria-expanded":"panelOpen","attr.aria-label":"ariaLabel || null","attr.aria-required":"required.toString()","attr.aria-disabled":"disabled.toString()","attr.aria-invalid":"errorState","attr.aria-activedescendant":"_getAriaActiveDescendant()","class.mat-mdc-select-disabled":"disabled","class.mat-mdc-select-invalid":"errorState","class.mat-mdc-select-required":"required","class.mat-mdc-select-empty":"empty","class.mat-mdc-select-multiple":"multiple"},classAttribute:"mat-mdc-select"},providers:[{provide:r.MatFormFieldControl,useExisting:L},{provide:i.MAT_OPTION_PARENT_COMPONENT,useExisting:L}],queries:[{propertyName:"customTrigger",first:!0,predicate:E,descendants:!0},{propertyName:"options",predicate:i.MatOption,descendants:!0},{propertyName:"optionGroups",predicate:i.MAT_OPTGROUP,descendants:!0}],exportAs:["matSelect"],usesInheritance:!0,ngImport:_,template:'\x3c!--\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\n While aria-owns is not required for the ARIA 1.2 `role="combobox"` interaction pattern,\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model="true"`\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\n VoiceOver from "seeing" the select\'s listbox overlay for aria-activedescendant.\n Using `aria-owns` re-parents the select overlay so that it works again.\n See https://github.com/angular/components/issues/20694\n--\x3e\n<div cdk-overlay-origin\n     [attr.aria-owns]="panelOpen ? id + \'-panel\' : null"\n     class="mat-mdc-select-trigger"\n     (click)="toggle()"\n     #fallbackOverlayOrigin="cdkOverlayOrigin"\n     #trigger>\n  <div class="mat-mdc-select-value" [ngSwitch]="empty" [attr.id]="_valueId">\n    <span class="mat-mdc-select-placeholder mat-mdc-select-min-line" *ngSwitchCase="true">{{placeholder}}</span>\n    <span class="mat-mdc-select-value-text" *ngSwitchCase="false" [ngSwitch]="!!customTrigger">\n      <span class="mat-mdc-select-min-line" *ngSwitchDefault>{{triggerValue}}</span>\n      <ng-content select="mat-select-trigger" *ngSwitchCase="true"></ng-content>\n    </span>\n  </div>\n\n  <div class="mat-mdc-select-arrow-wrapper">\n    <div class="mat-mdc-select-arrow">\n      \x3c!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. --\x3e\n      <svg viewBox="0 0 24 24" width="24px" height="24px" focusable="false">\n        <path d="M7 10l5 5 5-5z"/>\n      </svg>\n    </div>\n  </div>\n</div>\n\n<ng-template\n  cdk-connected-overlay\n  cdkConnectedOverlayLockPosition\n  cdkConnectedOverlayHasBackdrop\n  cdkConnectedOverlayBackdropClass="cdk-overlay-transparent-backdrop"\n  [cdkConnectedOverlayPanelClass]="_overlayPanelClass"\n  [cdkConnectedOverlayScrollStrategy]="_scrollStrategy"\n  [cdkConnectedOverlayOrigin]="_preferredOverlayOrigin || fallbackOverlayOrigin"\n  [cdkConnectedOverlayOpen]="panelOpen"\n  [cdkConnectedOverlayPositions]="_positions"\n  [cdkConnectedOverlayWidth]="_overlayWidth"\n  (backdropClick)="close()"\n  (attach)="_onAttached()"\n  (detach)="close()">\n  <div\n    #panel\n    role="listbox"\n    tabindex="-1"\n    class="mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}"\n    [attr.id]="id + \'-panel\'"\n    [attr.aria-multiselectable]="multiple"\n    [attr.aria-label]="ariaLabel || null"\n    [attr.aria-labelledby]="_getPanelAriaLabelledby()"\n    [ngClass]="panelClass"\n    [@transformPanel]="\'showing\'"\n    (@transformPanel.done)="_panelDoneAnimatingStream.next($event.toState)"\n    (keydown)="_handleKeydown($event)">\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n',styles:['.mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:calc(100vw - 32px);max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:calc(100vh - 32px);max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform,opacity;z-index:8;border-radius:4px;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}.mat-mdc-select{display:inline-block;width:100%;outline:none}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}.mdc-menu-surface.mat-mdc-select-panel{width:100%;max-height:275px;position:static;outline:0;margin:0;padding:8px 0;list-style-type:none}.mdc-menu-surface.mat-mdc-select-panel:focus{outline:none}.cdk-high-contrast-active .mdc-menu-surface.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) .mdc-menu-surface.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above .mdc-menu-surface.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;visibility:hidden}'],dependencies:[{kind:"directive",type:f.NgClass,selector:"[ngClass]",inputs:["class","ngClass"]},{kind:"directive",type:f.NgSwitch,selector:"[ngSwitch]",inputs:["ngSwitch"]},{kind:"directive",type:f.NgSwitchCase,selector:"[ngSwitchCase]",inputs:["ngSwitchCase"]},{kind:"directive",type:f.NgSwitchDefault,selector:"[ngSwitchDefault]"},{kind:"directive",type:v.CdkConnectedOverlay,selector:"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]",inputs:["cdkConnectedOverlayOrigin","cdkConnectedOverlayPositions","cdkConnectedOverlayPositionStrategy","cdkConnectedOverlayOffsetX","cdkConnectedOverlayOffsetY","cdkConnectedOverlayWidth","cdkConnectedOverlayHeight","cdkConnectedOverlayMinWidth","cdkConnectedOverlayMinHeight","cdkConnectedOverlayBackdropClass","cdkConnectedOverlayPanelClass","cdkConnectedOverlayViewportMargin","cdkConnectedOverlayScrollStrategy","cdkConnectedOverlayOpen","cdkConnectedOverlayDisableClose","cdkConnectedOverlayTransformOriginOn","cdkConnectedOverlayHasBackdrop","cdkConnectedOverlayLockPosition","cdkConnectedOverlayFlexibleDimensions","cdkConnectedOverlayGrowAfterOpen","cdkConnectedOverlayPush"],outputs:["backdropClick","positionChange","attach","detach","overlayKeydown","overlayOutsideClick"],exportAs:["cdkConnectedOverlay"]},{kind:"directive",type:v.CdkOverlayOrigin,selector:"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]",exportAs:["cdkOverlayOrigin"]}],animations:[M.transformPanel],changeDetection:_.ChangeDetectionStrategy.OnPush,encapsulation:_.ViewEncapsulation.None}),_.ɵɵngDeclareClassMetadata({minVersion:"12.0.0",version:"15.0.0",ngImport:_,type:L,decorators:[{type:n.Component,args:[{selector:"mat-select",exportAs:"matSelect",inputs:["disabled","disableRipple","tabIndex"],encapsulation:n.ViewEncapsulation.None,changeDetection:n.ChangeDetectionStrategy.OnPush,host:{role:"combobox","aria-autocomplete":"none","aria-haspopup":"listbox",class:"mat-mdc-select","[attr.id]":"id","[attr.tabindex]":"tabIndex","[attr.aria-controls]":'panelOpen ? id + "-panel" : null',"[attr.aria-expanded]":"panelOpen","[attr.aria-label]":"ariaLabel || null","[attr.aria-required]":"required.toString()","[attr.aria-disabled]":"disabled.toString()","[attr.aria-invalid]":"errorState","[attr.aria-activedescendant]":"_getAriaActiveDescendant()","[class.mat-mdc-select-disabled]":"disabled","[class.mat-mdc-select-invalid]":"errorState","[class.mat-mdc-select-required]":"required","[class.mat-mdc-select-empty]":"empty","[class.mat-mdc-select-multiple]":"multiple","(keydown)":"_handleKeydown($event)","(focus)":"_onFocus()","(blur)":"_onBlur()"},animations:[M.transformPanel],providers:[{provide:r.MatFormFieldControl,useExisting:L},{provide:i.MAT_OPTION_PARENT_COMPONENT,useExisting:L}],template:'\x3c!--\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\n While aria-owns is not required for the ARIA 1.2 `role="combobox"` interaction pattern,\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model="true"`\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\n VoiceOver from "seeing" the select\'s listbox overlay for aria-activedescendant.\n Using `aria-owns` re-parents the select overlay so that it works again.\n See https://github.com/angular/components/issues/20694\n--\x3e\n<div cdk-overlay-origin\n     [attr.aria-owns]="panelOpen ? id + \'-panel\' : null"\n     class="mat-mdc-select-trigger"\n     (click)="toggle()"\n     #fallbackOverlayOrigin="cdkOverlayOrigin"\n     #trigger>\n  <div class="mat-mdc-select-value" [ngSwitch]="empty" [attr.id]="_valueId">\n    <span class="mat-mdc-select-placeholder mat-mdc-select-min-line" *ngSwitchCase="true">{{placeholder}}</span>\n    <span class="mat-mdc-select-value-text" *ngSwitchCase="false" [ngSwitch]="!!customTrigger">\n      <span class="mat-mdc-select-min-line" *ngSwitchDefault>{{triggerValue}}</span>\n      <ng-content select="mat-select-trigger" *ngSwitchCase="true"></ng-content>\n    </span>\n  </div>\n\n  <div class="mat-mdc-select-arrow-wrapper">\n    <div class="mat-mdc-select-arrow">\n      \x3c!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. --\x3e\n      <svg viewBox="0 0 24 24" width="24px" height="24px" focusable="false">\n        <path d="M7 10l5 5 5-5z"/>\n      </svg>\n    </div>\n  </div>\n</div>\n\n<ng-template\n  cdk-connected-overlay\n  cdkConnectedOverlayLockPosition\n  cdkConnectedOverlayHasBackdrop\n  cdkConnectedOverlayBackdropClass="cdk-overlay-transparent-backdrop"\n  [cdkConnectedOverlayPanelClass]="_overlayPanelClass"\n  [cdkConnectedOverlayScrollStrategy]="_scrollStrategy"\n  [cdkConnectedOverlayOrigin]="_preferredOverlayOrigin || fallbackOverlayOrigin"\n  [cdkConnectedOverlayOpen]="panelOpen"\n  [cdkConnectedOverlayPositions]="_positions"\n  [cdkConnectedOverlayWidth]="_overlayWidth"\n  (backdropClick)="close()"\n  (attach)="_onAttached()"\n  (detach)="close()">\n  <div\n    #panel\n    role="listbox"\n    tabindex="-1"\n    class="mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}"\n    [attr.id]="id + \'-panel\'"\n    [attr.aria-multiselectable]="multiple"\n    [attr.aria-label]="ariaLabel || null"\n    [attr.aria-labelledby]="_getPanelAriaLabelledby()"\n    [ngClass]="panelClass"\n    [@transformPanel]="\'showing\'"\n    (@transformPanel.done)="_panelDoneAnimatingStream.next($event.toState)"\n    (keydown)="_handleKeydown($event)">\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n',styles:['.mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:calc(100vw - 32px);max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:calc(100vh - 32px);max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform,opacity;z-index:8;border-radius:4px;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}.mat-mdc-select{display:inline-block;width:100%;outline:none}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}.mdc-menu-surface.mat-mdc-select-panel{width:100%;max-height:275px;position:static;outline:0;margin:0;padding:8px 0;list-style-type:none}.mdc-menu-surface.mat-mdc-select-panel:focus{outline:none}.cdk-high-contrast-active .mdc-menu-surface.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) .mdc-menu-surface.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above .mdc-menu-surface.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:" ";white-space:pre;width:1px;display:inline-block;visibility:hidden}']}]}],propDecorators:{options:[{type:n.ContentChildren,args:[i.MatOption,{descendants:!0}]}],optionGroups:[{type:n.ContentChildren,args:[i.MAT_OPTGROUP,{descendants:!0}]}],customTrigger:[{type:n.ContentChild,args:[E]}]}});class N{}N.ɵfac=_.ɵɵngDeclareFactory({minVersion:"12.0.0",version:"15.0.0",ngImport:_,type:N,deps:[],target:_.ɵɵFactoryTarget.NgModule}),N.ɵmod=_.ɵɵngDeclareNgModule({minVersion:"14.0.0",version:"15.0.0",ngImport:_,type:N,declarations:[L,V],imports:[a.CommonModule,t.OverlayModule,i.MatOptionModule,i.MatCommonModule],exports:[o.CdkScrollableModule,r.MatFormFieldModule,L,V,i.MatOptionModule,i.MatCommonModule]}),N.ɵinj=_.ɵɵngDeclareInjector({minVersion:"12.0.0",version:"15.0.0",ngImport:_,type:N,providers:[T],imports:[a.CommonModule,t.OverlayModule,i.MatOptionModule,i.MatCommonModule,o.CdkScrollableModule,r.MatFormFieldModule,i.MatOptionModule,i.MatCommonModule]}),_.ɵɵngDeclareClassMetadata({minVersion:"12.0.0",version:"15.0.0",ngImport:_,type:N,decorators:[{type:n.NgModule,args:[{imports:[a.CommonModule,t.OverlayModule,i.MatOptionModule,i.MatCommonModule],exports:[o.CdkScrollableModule,r.MatFormFieldModule,L,V,i.MatOptionModule,i.MatCommonModule],declarations:[L,V],providers:[T]}]}]}),e.MAT_SELECT_CONFIG=A,e.MAT_SELECT_SCROLL_STRATEGY=I,e.MAT_SELECT_SCROLL_STRATEGY_PROVIDER=T,e.MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY=D,e.MAT_SELECT_TRIGGER=E,e.MatSelect=L,e.MatSelectChange=R,e.MatSelectModule=N,e.MatSelectTrigger=V,e._MatSelectBase=P,e.matSelectAnimations=M}));
